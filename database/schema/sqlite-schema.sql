CREATE TABLE IF NOT EXISTS "migrations" ("id" integer primary key autoincrement not null, "migration" varchar not null, "batch" integer not null);
CREATE TABLE IF NOT EXISTS "password_resets" ("email" varchar not null, "token" varchar not null, "created_at" datetime);
CREATE INDEX "password_resets_email_index" on "password_resets" ("email");
CREATE TABLE IF NOT EXISTS "personal_access_tokens" ("id" integer primary key autoincrement not null, "tokenable_type" varchar not null, "tokenable_id" integer not null, "name" varchar not null, "token" varchar not null, "abilities" text, "last_used_at" datetime, "expires_at" datetime, "created_at" datetime, "updated_at" datetime);
CREATE INDEX "personal_access_tokens_tokenable_type_tokenable_id_index" on "personal_access_tokens" ("tokenable_type", "tokenable_id");
CREATE UNIQUE INDEX "personal_access_tokens_token_unique" on "personal_access_tokens" ("token");
CREATE TABLE IF NOT EXISTS "roles" ("id" integer primary key autoincrement not null, "name" varchar not null, "permissions" text, "created_at" datetime, "updated_at" datetime);
CREATE UNIQUE INDEX "roles_name_unique" on "roles" ("name");
CREATE TABLE IF NOT EXISTS "events" ("id" integer primary key autoincrement not null, "title" varchar not null, "slug" varchar not null, "description" text not null, "start_date" datetime not null, "end_date" datetime not null, "location" varchar not null, "featured_image" varchar, "status" varchar not null default 'draft', "created_at" datetime, "updated_at" datetime);
CREATE UNIQUE INDEX "events_slug_unique" on "events" ("slug");
CREATE TABLE IF NOT EXISTS "tickets" ("id" integer primary key autoincrement not null, "event_id" integer not null, "name" varchar not null, "description" text, "price" numeric not null, "quantity" integer, "available" integer, "sale_start" datetime, "sale_end" datetime, "created_at" datetime, "updated_at" datetime, foreign key("event_id") references "events"("id") on delete cascade);
CREATE TABLE IF NOT EXISTS "speakers" ("id" integer primary key autoincrement not null, "name" varchar not null, "bio" text, "photo" varchar, "position" varchar, "company" varchar, "created_at" datetime, "updated_at" datetime);
CREATE TABLE IF NOT EXISTS "users" ("id" integer primary key autoincrement not null, "name" varchar not null, "email" varchar not null, "email_verified_at" datetime, "password" varchar not null, "role_id" integer, "remember_token" varchar, "created_at" datetime, "updated_at" datetime, foreign key("role_id") references "roles"("id") on delete set null);
CREATE UNIQUE INDEX "users_email_unique" on "users" ("email");
CREATE TABLE IF NOT EXISTS "sessions" ("id" integer primary key autoincrement not null, "event_id" integer not null, "title" varchar not null, "description" text, "start_time" datetime not null, "end_time" datetime not null, "location" varchar, "created_at" datetime, "updated_at" datetime, "category" varchar, foreign key("event_id") references "events"("id") on delete cascade);
CREATE TABLE IF NOT EXISTS "session_speakers" ("session_id" integer not null, "speaker_id" integer not null, foreign key("session_id") references "sessions"("id") on delete cascade, foreign key("speaker_id") references "speakers"("id") on delete cascade, primary key ("session_id", "speaker_id"));
CREATE TABLE IF NOT EXISTS "payments" ("id" integer primary key autoincrement not null, "registration_id" integer not null, "payment_method" varchar not null, "amount" numeric not null, "currency" varchar not null default 'USD', "status" varchar not null default 'pending', "transaction_id" varchar, "gateway_reference" varchar, "gateway_response" text, "crypto_currency" varchar, "crypto_address" varchar, "crypto_amount" numeric, "paid_at" datetime, "failed_at" datetime, "failure_reason" text, "created_at" datetime, "updated_at" datetime, foreign key("registration_id") references "registrations"("id") on delete cascade);
CREATE INDEX "payments_status_payment_method_index" on "payments" ("status", "payment_method");
CREATE INDEX "payments_transaction_id_index" on "payments" ("transaction_id");
CREATE TABLE IF NOT EXISTS "orders" ("id" integer primary key autoincrement not null, "order_number" varchar not null, "user_id" integer not null, "status" varchar not null default 'pending', "subtotal" numeric not null, "tax_amount" numeric not null default '0', "discount_amount" numeric not null default '0', "total_amount" numeric not null, "currency" varchar not null default 'USD', "billing_details" text, "notes" text, "completed_at" datetime, "cancelled_at" datetime, "created_at" datetime, "updated_at" datetime, foreign key("user_id") references "users"("id") on delete cascade);
CREATE INDEX "orders_user_id_status_index" on "orders" ("user_id", "status");
CREATE INDEX "orders_order_number_index" on "orders" ("order_number");
CREATE UNIQUE INDEX "orders_order_number_unique" on "orders" ("order_number");
CREATE TABLE IF NOT EXISTS "media" ("id" integer primary key autoincrement not null, "name" varchar not null, "file_name" varchar not null, "mime_type" varchar not null, "path" varchar not null, "size" integer not null, "disk" varchar not null default 'public', "metadata" text, "alt_text" varchar, "description" text, "uploaded_by" integer, "created_at" datetime, "updated_at" datetime, foreign key("uploaded_by") references "users"("id") on delete set null);
CREATE INDEX "media_mime_type_created_at_index" on "media" ("mime_type", "created_at");
CREATE INDEX "media_uploaded_by_index" on "media" ("uploaded_by");
CREATE TABLE pages (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, title VARCHAR(255) NOT NULL, slug VARCHAR(255) NOT NULL, content CLOB DEFAULT NULL, meta_description VARCHAR(255) DEFAULT NULL, status VARCHAR(255) DEFAULT 'draft' NOT NULL, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL);
CREATE UNIQUE INDEX pages_slug_unique ON pages (slug);
CREATE TABLE registrations (id INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, user_id BIGINT UNSIGNED DEFAULT NULL, event_id INTEGER NOT NULL, ticket_id INTEGER NOT NULL, status VARCHAR(255) DEFAULT 'pending' NOT NULL, payment_status VARCHAR(255) DEFAULT 'unpaid' NOT NULL, created_at DATETIME DEFAULT NULL, updated_at DATETIME DEFAULT NULL, order_id INTEGER DEFAULT NULL, "attendee_name" varchar, "attendee_email" varchar, "attendee_phone" varchar, "emergency_contact" varchar, "registration_status" varchar check ("registration_status" in ('pending', 'confirmed', 'cancelled', 'declined')) not null default 'pending', "marked_at" datetime, "payment_confirmed_at" datetime, "declined_at" datetime, "declined_reason" text, "emergency_contact_name" varchar, "emergency_contact_phone" varchar, "ticket_selections" text, "total_amount" numeric, "terms_accepted_at" datetime, FOREIGN KEY (user_id) REFERENCES users (id) ON UPDATE NO ACTION ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE, FOREIGN KEY (event_id) REFERENCES events (id) ON UPDATE NO ACTION ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE, FOREIGN KEY (ticket_id) REFERENCES tickets (id) ON UPDATE NO ACTION ON DELETE CASCADE NOT DEFERRABLE INITIALLY IMMEDIATE);
CREATE INDEX registrations_order_id_index ON registrations (order_id);
CREATE INDEX IDX_53DE51E7A76ED395 ON registrations (user_id);
CREATE INDEX IDX_53DE51E771F7E88B ON registrations (event_id);
CREATE INDEX IDX_53DE51E7700047D2 ON registrations (ticket_id);
CREATE INDEX "idx_registrations_email_event" on "registrations" ("attendee_email", "event_id");
CREATE INDEX "idx_registrations_phone_event" on "registrations" ("attendee_phone", "event_id");
CREATE INDEX "registrations_registration_status_index" on "registrations" ("registration_status");
CREATE INDEX "registrations_marked_at_index" on "registrations" ("marked_at");
CREATE TABLE IF NOT EXISTS "registration_locks" ("id" integer primary key autoincrement not null, "email" varchar not null, "phone" varchar not null, "event_id" integer not null, "locked_at" datetime not null, "expires_at" datetime not null, "created_at" datetime, "updated_at" datetime, foreign key("event_id") references "events"("id") on delete cascade);
CREATE INDEX "idx_locks_email_event" on "registration_locks" ("email", "event_id");
CREATE INDEX "idx_locks_phone_event" on "registration_locks" ("phone", "event_id");
CREATE INDEX "idx_locks_email_phone_event" on "registration_locks" ("email", "phone", "event_id");
CREATE INDEX "registration_locks_expires_at_index" on "registration_locks" ("expires_at");
INSERT INTO migrations VALUES(1,'2014_10_12_100000_create_password_resets_table',1);
INSERT INTO migrations VALUES(2,'2019_12_14_000001_create_personal_access_tokens_table',1);
INSERT INTO migrations VALUES(3,'2025_07_23_192020_create_roles_table',1);
INSERT INTO migrations VALUES(4,'2025_07_23_192036_create_events_table',1);
INSERT INTO migrations VALUES(5,'2025_07_23_192530_create_tickets_table',1);
INSERT INTO migrations VALUES(6,'2025_07_23_192546_create_speakers_table',1);
INSERT INTO migrations VALUES(7,'2025_07_23_194109_create_users_table',1);
INSERT INTO migrations VALUES(8,'2025_07_23_194201_create_sessions_table',1);
INSERT INTO migrations VALUES(9,'2025_07_23_194214_create_session_speakers_table',1);
INSERT INTO migrations VALUES(10,'2025_07_23_194230_create_registrations_table',1);
INSERT INTO migrations VALUES(11,'2025_07_23_194243_create_pages_table',1);
INSERT INTO migrations VALUES(12,'2025_07_24_142950_add_category_to_sessions_table',1);
INSERT INTO migrations VALUES(13,'2025_07_24_144951_create_payments_table',1);
INSERT INTO migrations VALUES(14,'2025_07_24_145602_create_orders_table',1);
INSERT INTO migrations VALUES(15,'2025_07_24_145726_add_order_id_to_registrations_table',1);
INSERT INTO migrations VALUES(16,'2025_07_24_151554_create_media_table',1);
INSERT INTO migrations VALUES(17,'2025_07_25_081708_make_pages_content_nullable',2);
INSERT INTO migrations VALUES(18,'2025_08_05_145622_add_direct_registration_fields_to_registrations_table',3);
INSERT INTO migrations VALUES(19,'2025_08_05_151836_add_enhanced_registration_fields_to_registrations_table',4);
INSERT INTO migrations VALUES(20,'2025_08_05_151907_create_registration_locks_table',4);
